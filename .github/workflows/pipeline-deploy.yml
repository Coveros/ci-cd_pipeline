name: Deploy Lambda Function

# on push, execute a lint job
on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest #this is a GitHub Ubuntu runner
    steps: 
      - name: Check out code
        uses: actions/checkout@v3 #name of a public GH action for code checkout available at https://github.com/marketplace/actions/checkout
      - name: Set up Python
        uses: actions/setup-python@v4 #name of a public GH action for python installation available at https://github.com/marketplace/actions/setup-python
        with:
          python-version: 3.8
      - name: Install libraries
        run: pip install flake8 #install flake8 library
      - name: Lint with flake8
        run: |
            cd function # executes the code lint inside the function folder (parameters are irrelevant for this lab)
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi #installs the libraries listed in the requirements.txt (not necessary, just to fill space for the build)
      - name: Zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact                    #Upload the .zip file named using the last commit SHA to the repo hosted space in GitHub
        uses: actions/upload-artifact@v3          #Uses the action upload-artifact https://github.com/marketplace/actions/upload-a-build-artifact
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip             #The path where the artifact is uploaded, this repo identiefied by its SHA token
        
  publish:
    runs-on: ubuntu-latest
    needs: build # publish job will run only if build job is successful
    steps:
      - name: create release
        id: create_release # add an ID for this step that can be utilize with the upload-release-asset action
        uses: actions/create-release@v1 
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }} #This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_number }} #the tag name is the run number
          release_name: Release from run N. ${{ github.run_number }} #use the run sequential number
          body: New release for ${{ github.sha }}. Release notes can be found in the docs. #add some text to the release for context
          draft: false
          prerelease: false
      - name: download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: zipped-bundle #name of the artifact bundle
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} #to upload the artifact to the correct release each time
          asset_path: ./${{ github.sha }}.zip #runner path
          asset_name: source_code_with_libraries.zip #name that will appear in the release page
          asset_content_type: application/zip #needed to identify the type of file#
      
